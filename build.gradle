plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.moddev' version '2.0.63-beta'
}

version = '2.2.1'
group = 'dev.gigaherz.sewingkit'

var minecraftVersionResolver = project.neoForge.version.map { "1." + (it =~ /^(\d+(?:\.[1-9]\d*|))\./)[0][1] }
base {
    archivesName = minecraftVersionResolver.map { "SewingKit-${it}" }
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

java.withSourcesJar()

repositories {
    maven { // JEI
        url "https://maven.blamejared.com/"
        // fallback: url = "https://modmaven.dev"
    }
    maven { // CURIOS
        url "https://maven.theillusivec4.top/"
    }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = "Dogforce Games maven"
        url 'https://www.dogforce-games.com/maven/'
    }
}

neoForge {
    version = "21.4.47-beta"

    runs {
        // applies to all the run configs below
        configureEach {
            gameDirectory = project.file('run')
            logLevel = org.slf4j.event.Level.DEBUG
            //jvmArgument "-Dmixin.debug.export=true"
            //jvmArgument "-Dmixin.debug.verbose=true"
        }

        client {
            client()
        }

        server {
            server()
        }

        clientData {
            clientData()
            programArguments.addAll '--mod', 'sewingkit', '--all', '--output', file('src/main/generated_resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
        }
    }

    mods {
        thismod {
            sourceSet(sourceSets.main)
        }
    }

    parchment {
        minecraftVersion = "1.21.4"
        mappingsVersion = "2024.12.29"
    }
}

sourceSets {
    main.resources.srcDirs += 'src/main/generated_resources'
}

dependencies {
    //compileOnly "mezz.jei:jei-1.21-common-api:19.5.0.56"
    //runtimeOnly "mezz.jei:jei-1.21-common:19.5.0.56"
    //compileOnly "mezz.jei:jei-1.21-neoforge-api:19.5.0.56"
    //runtimeOnly "mezz.jei:jei-1.21-neoforge:19.5.0.56"

    //compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.19.2-5.1.1.0")
    //runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.19.2-5.1.1.0")

    //runtimeOnly fg.deobf("curse.maven:cosmetic-armor-reworked-237307:3920646")

    runtimeOnly("dev.gigaherz.toolbelt:ToolBelt-1.21.4:2.4.0") {
        transitive = false
    }
}

jar {
    from(files('LICENSE.txt'))

    manifest {
        attributes([
            "Specification-Title": "sewingkit",
            "Specification-Vendor": "gigaherz",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": "sewingkit",
            "Implementation-Version": project.version,
            "Implementation-Vendor" :"gigaherz",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")/*,
            "Automatic-Module-Name": "dev.gigaherz.sewingkit"*/
        ])
    }
}

tasks.named('sourcesJar') {
    from(files('LICENSE.txt'))
}

project.afterEvaluate {
    publish.dependsOn('build')
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId project.archivesBaseName
                from components.java
            }
        }

        repositories {
            if (findProperty("RELEASE") && System.env.giga_maven_host != null) {
                System.out.println("Remote publish enabled on " + System.env.giga_maven_host)
                maven {
                    url System.env.giga_maven_host
                    credentials {
                        username System.env.giga_maven_user
                        password System.env.giga_maven_password
                    }
                }
            }
            else {
                System.out.println("Remote publish disabled.")
                maven {
                    url "$projectDir/../CommonMaven"
                }
            }
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

// IDEA no longer automatically downloads sources/javadoc jars for dependencies, so we need to explicitly enable the behavior.
idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
